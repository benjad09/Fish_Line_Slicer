/*
 * Copyright (c) 2017 Linaro Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/l4/stm32l432Xc.dtsi>
#include <st/l4/stm32l432k(b-c)ux-pinctrl.dtsi>

/ {
	model = "STMicroelectronics STM32L432KC-NUCLEO board";
	compatible = "st,stm32l432kc-nucleo";

	chosen {
		zephyr,console = &usart2;
		zephyr,shell-uart = &usart2;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,can-primary = &can1;
	};

	leds {
		compatible = "gpio-leds";
		green_led: led_0 {
			gpios = <&gpiob 3 GPIO_ACTIVE_HIGH>;
			label = "User LD3";
		};
	};

	keypad: keypad_16 {
		compatible = "buttons,keypad";
		label = "16-Pin_Keypad";
		rows-gpios = <&gpiob 0 GPIO_PULL_UP>,<&gpiob 7 GPIO_PULL_UP>,<&gpiob 6 GPIO_PULL_UP>,<&gpiob 1 GPIO_PULL_UP>;
		column-gpios   = <&gpioa 8 GPIO_PULL_UP>,<&gpioa 11 GPIO_PULL_UP>,<&gpiob 5 GPIO_PULL_UP>,<&gpiob 4 GPIO_PULL_UP>;
	};

	servo1: servo_1 {
		compatible = "servo,pwm";
		label = "Servo 1";
		pwms = <&pwm2 1 0 1>;
	};

	servo2: servo_2 {
		compatible = "servo,pwm";
		label = "Servo 2";
		pwms = <&pwm2 2 0 1>;
	};

	exstepper: stepper {
		compatible = "stepper,afour";
		status = "okay";
		label = "steppers";
		en-gpios = 	 <&gpioa 5 GPIO_ACTIVE_LOW>;
		step-gpios = <&gpioa 3 GPIO_ACTIVE_HIGH>,<&gpioa 6 GPIO_ACTIVE_HIGH>;
		dir-gpios =  <&gpioa 4 GPIO_ACTIVE_HIGH>,<&gpioa 7 GPIO_ACTIVE_HIGH>;
	};

	aliases {
		led0 = &green_led;
	};
};

&clk_hsi {
	status = "okay";
};

&pll {
	div-m = <1>;
	mul-n = <20>;
	div-p = <7>;
	div-q = <2>;
	div-r = <4>;
	clocks = <&clk_hsi>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(80)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
	apb2-prescaler = <1>;
};

&usart1 {
	pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
	current-speed = <115200>;
};

&usart2 {
	pinctrl-0 = <&usart2_tx_pa2 &usart2_rx_pa15>;
	current-speed = <115200>;
	status = "okay";
};

&spi1 {
	// pinctrl-0 = <&spi1_nss_pa4 &spi1_sck_pa5
	// 	     &spi1_miso_pa6 &spi1_mosi_pa7>;
	//status = "okay";
};

&i2c1 {
		pinctrl-0 = <&i2c1_scl_pa9 &i2c1_sda_pa10>;
		clock-frequency = <I2C_BITRATE_FAST>;
		status = "okay";
		lcdthing: lcd@27{
			status = "okay";
			compatible = "lcd,hd4478ui2c";
			label = "lcd";
			reg = <0x27>;
			/* reg is the I2C device address.
			* It must match the node's unit address. */
			//reg = <0x27>;

			/* Configure other I2C device properties as needed.
			* Find your device's DT binding for details. */
		};
};

&timers2 {
	status = "okay";

	pwm2: pwm {
		status = "okay";
		pinctrl-0 = <&tim2_ch1_pa0 &tim2_ch2_pa1>;
	};
};

&can1 {
	// pinctrl-0 = <&can1_rx_pa11 &can1_tx_pa12>;
	// bus-speed = <125000>;
	//status = "okay";
};

&rtc {
	status = "okay";
};

&lptim1 {
	status = "okay";
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/*
		 * Reserve the final 16 KiB for file system partition
		 */
		storage_partition: partition@3c000 {
			label = "storage";
			reg = <0x0003c000 0x00004000>;
		};
	};
};
